definitions:
  models.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: mypassword
        type: string
    required:
    - email
    - password
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    type: object
  models.UpdateUserDetailInput:
    properties:
      bio:
        type: string
      profile_picture:
        type: string
      social_links:
        additionalProperties:
          type: string
        type: object
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login with email and password to get a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses: {}
      summary: User login
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, password, and other details
      parameters:
      - description: User registration data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Auth
  /auth/user-details:
    patch:
      consumes:
      - application/json
      description: Update user details such as name, email, etc.
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User details to update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserDetailInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user details
      tags:
      - User
  /auth/verify-email:
    get:
      consumes:
      - application/json
      description: Verify email by sending an OTP
      parameters:
      - description: Email address
        in: query
        name: email
        required: true
        type: string
      - description: User's name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verify email
      tags:
      - Auth
  /auth/verify-otp:
    get:
      consumes:
      - application/json
      description: Verify OTP sent to the user's email
      parameters:
      - description: Email address
        in: query
        name: email
        required: true
        type: string
      - description: One-Time Password
        in: query
        name: otp
        required: true
        type: string
      - description: User's name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verify OTP
      tags:
      - Auth
swagger: "2.0"
